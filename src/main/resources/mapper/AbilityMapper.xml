<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qkm.wiki.mapper.AbilityMapper">
  <resultMap id="BaseResultMap" type="com.qkm.wiki.domain.Ability">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="bumen" jdbcType="VARCHAR" property="bumen" />
    <result column="qishu" jdbcType="VARCHAR" property="qishu" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="task" jdbcType="VARCHAR" property="task" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="teach" jdbcType="VARCHAR" property="teach" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="add1" jdbcType="VARCHAR" property="add1" />
    <result column="add2" jdbcType="VARCHAR" property="add2" />
    <result column="add3" jdbcType="VARCHAR" property="add3" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.qkm.wiki.domain.Ability">
    <result column="content1" jdbcType="LONGVARCHAR" property="content1" />
    <result column="content2" jdbcType="LONGVARCHAR" property="content2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `name`, bumen, qishu, `level`, task, score, num, sort, teach, `date`, add1, add2, 
    add3
  </sql>
  <sql id="Blob_Column_List">
    content1, content2
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.qkm.wiki.domain.AbilityExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ability
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.qkm.wiki.domain.AbilityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ability
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ability
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ability
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qkm.wiki.domain.AbilityExample">
    delete from ability
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qkm.wiki.domain.Ability">
    insert into ability (id, `name`, bumen, 
      qishu, `level`, task, 
      score, num, sort, teach, 
      `date`, add1, add2, 
      add3, content1, content2
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{bumen,jdbcType=VARCHAR}, 
      #{qishu,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR}, #{task,jdbcType=VARCHAR}, 
      #{score,jdbcType=INTEGER}, #{num,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, #{teach,jdbcType=VARCHAR}, 
      #{date,jdbcType=TIMESTAMP}, #{add1,jdbcType=VARCHAR}, #{add2,jdbcType=VARCHAR}, 
      #{add3,jdbcType=VARCHAR}, #{content1,jdbcType=LONGVARCHAR}, #{content2,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qkm.wiki.domain.Ability">
    insert into ability
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="bumen != null">
        bumen,
      </if>
      <if test="qishu != null">
        qishu,
      </if>
      <if test="level != null">
        `level`,
      </if>
      <if test="task != null">
        task,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="teach != null">
        teach,
      </if>
      <if test="date != null">
        `date`,
      </if>
      <if test="add1 != null">
        add1,
      </if>
      <if test="add2 != null">
        add2,
      </if>
      <if test="add3 != null">
        add3,
      </if>
      <if test="content1 != null">
        content1,
      </if>
      <if test="content2 != null">
        content2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="bumen != null">
        #{bumen,jdbcType=VARCHAR},
      </if>
      <if test="qishu != null">
        #{qishu,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="task != null">
        #{task,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="teach != null">
        #{teach,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="add1 != null">
        #{add1,jdbcType=VARCHAR},
      </if>
      <if test="add2 != null">
        #{add2,jdbcType=VARCHAR},
      </if>
      <if test="add3 != null">
        #{add3,jdbcType=VARCHAR},
      </if>
      <if test="content1 != null">
        #{content1,jdbcType=LONGVARCHAR},
      </if>
      <if test="content2 != null">
        #{content2,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qkm.wiki.domain.AbilityExample" resultType="java.lang.Long">
    select count(*) from ability
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ability
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.bumen != null">
        bumen = #{record.bumen,jdbcType=VARCHAR},
      </if>
      <if test="record.qishu != null">
        qishu = #{record.qishu,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        `level` = #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="record.task != null">
        task = #{record.task,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.teach != null">
        teach = #{record.teach,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        `date` = #{record.date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.add1 != null">
        add1 = #{record.add1,jdbcType=VARCHAR},
      </if>
      <if test="record.add2 != null">
        add2 = #{record.add2,jdbcType=VARCHAR},
      </if>
      <if test="record.add3 != null">
        add3 = #{record.add3,jdbcType=VARCHAR},
      </if>
      <if test="record.content1 != null">
        content1 = #{record.content1,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.content2 != null">
        content2 = #{record.content2,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update ability
    set id = #{record.id,jdbcType=BIGINT},
      `name` = #{record.name,jdbcType=VARCHAR},
      bumen = #{record.bumen,jdbcType=VARCHAR},
      qishu = #{record.qishu,jdbcType=VARCHAR},
      `level` = #{record.level,jdbcType=VARCHAR},
      task = #{record.task,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=INTEGER},
      num = #{record.num,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      teach = #{record.teach,jdbcType=VARCHAR},
      `date` = #{record.date,jdbcType=TIMESTAMP},
      add1 = #{record.add1,jdbcType=VARCHAR},
      add2 = #{record.add2,jdbcType=VARCHAR},
      add3 = #{record.add3,jdbcType=VARCHAR},
      content1 = #{record.content1,jdbcType=LONGVARCHAR},
      content2 = #{record.content2,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ability
    set id = #{record.id,jdbcType=BIGINT},
      `name` = #{record.name,jdbcType=VARCHAR},
      bumen = #{record.bumen,jdbcType=VARCHAR},
      qishu = #{record.qishu,jdbcType=VARCHAR},
      `level` = #{record.level,jdbcType=VARCHAR},
      task = #{record.task,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=INTEGER},
      num = #{record.num,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      teach = #{record.teach,jdbcType=VARCHAR},
      `date` = #{record.date,jdbcType=TIMESTAMP},
      add1 = #{record.add1,jdbcType=VARCHAR},
      add2 = #{record.add2,jdbcType=VARCHAR},
      add3 = #{record.add3,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qkm.wiki.domain.Ability">
    update ability
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="bumen != null">
        bumen = #{bumen,jdbcType=VARCHAR},
      </if>
      <if test="qishu != null">
        qishu = #{qishu,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        `level` = #{level,jdbcType=VARCHAR},
      </if>
      <if test="task != null">
        task = #{task,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="teach != null">
        teach = #{teach,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        `date` = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="add1 != null">
        add1 = #{add1,jdbcType=VARCHAR},
      </if>
      <if test="add2 != null">
        add2 = #{add2,jdbcType=VARCHAR},
      </if>
      <if test="add3 != null">
        add3 = #{add3,jdbcType=VARCHAR},
      </if>
      <if test="content1 != null">
        content1 = #{content1,jdbcType=LONGVARCHAR},
      </if>
      <if test="content2 != null">
        content2 = #{content2,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.qkm.wiki.domain.Ability">
    update ability
    set `name` = #{name,jdbcType=VARCHAR},
      bumen = #{bumen,jdbcType=VARCHAR},
      qishu = #{qishu,jdbcType=VARCHAR},
      `level` = #{level,jdbcType=VARCHAR},
      task = #{task,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      teach = #{teach,jdbcType=VARCHAR},
      `date` = #{date,jdbcType=TIMESTAMP},
      add1 = #{add1,jdbcType=VARCHAR},
      add2 = #{add2,jdbcType=VARCHAR},
      add3 = #{add3,jdbcType=VARCHAR},
      content1 = #{content1,jdbcType=LONGVARCHAR},
      content2 = #{content2,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qkm.wiki.domain.Ability">
    update ability
    set `name` = #{name,jdbcType=VARCHAR},
      bumen = #{bumen,jdbcType=VARCHAR},
      qishu = #{qishu,jdbcType=VARCHAR},
      `level` = #{level,jdbcType=VARCHAR},
      task = #{task,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      teach = #{teach,jdbcType=VARCHAR},
      `date` = #{date,jdbcType=TIMESTAMP},
      add1 = #{add1,jdbcType=VARCHAR},
      add2 = #{add2,jdbcType=VARCHAR},
      add3 = #{add3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>


  <select id="selectScoreByCondition"  resultType="com.qkm.wiki.resp.AbilityQueryResp">
   select `name`,`task`, `score`,`date`  from ability where name = #{name,jdbcType=VARCHAR} and qishu = #{qishu,jdbcType=VARCHAR}and num = #{num,jdbcType=VARCHAR}
  </select>

  <select id="findname"  resultType="com.qkm.wiki.resp.AbilityQueryResp">
   select `name`,`task`, `score`,`num`,`date`  from ability where name = #{name,jdbcType=VARCHAR}
  </select>

  <select id="findsort"  resultType="com.qkm.wiki.resp.AbilityQueryResp">
   select `name`,sum(`score`) as total from ability where num= #{num,jdbcType=INTEGER} group by name order by total desc;
  </select>

  <select id="findaverage"  resultType="com.qkm.wiki.resp.AbilityQueryResp">
   select `task`, round(avg(`score`),2) as average from ability where num = #{num,jdbcType=INTEGER} group by task ;

  </select>

  <select id="conclude"  resultType="com.qkm.wiki.resp.AbilityQueryResp">
   select `name`,`task`,`content1`,`content2`,`add1` from ability where name = #{name,jdbcType=VARCHAR} and task = #{task,jdbcType=VARCHAR} and num = #{num,jdbcType=VARCHAR}

  </select>


</mapper>