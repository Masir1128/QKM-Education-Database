<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qkm.wiki.mapper.ZlMapper">
  <resultMap id="BaseResultMap" type="com.qkm.wiki.domain.Zl">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="category1" jdbcType="BIGINT" property="category1" />
    <result column="category2" jdbcType="BIGINT" property="category2" />
    <result column="category3" jdbcType="BIGINT" property="category3" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="cover" jdbcType="VARCHAR" property="cover" />
    <result column="viewcount" jdbcType="INTEGER" property="viewcount" />
    <result column="votecount" jdbcType="INTEGER" property="votecount" />
    <result column="dates" jdbcType="TIMESTAMP" property="dates" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="add1" jdbcType="VARCHAR" property="add1" />
    <result column="add2" jdbcType="VARCHAR" property="add2" />
    <result column="add3" jdbcType="VARCHAR" property="add3" />
    <result column="add4" jdbcType="VARCHAR" property="add4" />
    <result column="add5" jdbcType="INTEGER" property="add5" />
    <result column="add6" jdbcType="INTEGER" property="add6" />
    <result column="add7" jdbcType="INTEGER" property="add7" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `name`, category1, category2, category3, description, cover, viewcount, votecount, 
    dates, author, add1, add2, add3, add4, add5, add6, add7
  </sql>
  <select id="selectByExample" parameterType="com.qkm.wiki.domain.ZlExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from zl
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from zl
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qkm.wiki.domain.ZlExample">
    delete from zl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qkm.wiki.domain.Zl">
    insert into zl (id, `name`, category1, 
      category2, category3, description, 
      cover, viewcount, votecount, 
      dates, author, add1, 
      add2, add3, add4, add5, 
      add6, add7)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{category1,jdbcType=BIGINT}, 
      #{category2,jdbcType=BIGINT}, #{category3,jdbcType=BIGINT}, #{description,jdbcType=VARCHAR}, 
      #{cover,jdbcType=VARCHAR}, #{viewcount,jdbcType=INTEGER}, #{votecount,jdbcType=INTEGER}, 
      #{dates,jdbcType=TIMESTAMP}, #{author,jdbcType=VARCHAR}, #{add1,jdbcType=VARCHAR}, 
      #{add2,jdbcType=VARCHAR}, #{add3,jdbcType=VARCHAR}, #{add4,jdbcType=VARCHAR}, #{add5,jdbcType=INTEGER}, 
      #{add6,jdbcType=INTEGER}, #{add7,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qkm.wiki.domain.Zl">
    insert into zl
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="category1 != null">
        category1,
      </if>
      <if test="category2 != null">
        category2,
      </if>
      <if test="category3 != null">
        category3,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="cover != null">
        cover,
      </if>
      <if test="viewcount != null">
        viewcount,
      </if>
      <if test="votecount != null">
        votecount,
      </if>
      <if test="dates != null">
        dates,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="add1 != null">
        add1,
      </if>
      <if test="add2 != null">
        add2,
      </if>
      <if test="add3 != null">
        add3,
      </if>
      <if test="add4 != null">
        add4,
      </if>
      <if test="add5 != null">
        add5,
      </if>
      <if test="add6 != null">
        add6,
      </if>
      <if test="add7 != null">
        add7,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="category1 != null">
        #{category1,jdbcType=BIGINT},
      </if>
      <if test="category2 != null">
        #{category2,jdbcType=BIGINT},
      </if>
      <if test="category3 != null">
        #{category3,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="cover != null">
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="viewcount != null">
        #{viewcount,jdbcType=INTEGER},
      </if>
      <if test="votecount != null">
        #{votecount,jdbcType=INTEGER},
      </if>
      <if test="dates != null">
        #{dates,jdbcType=TIMESTAMP},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="add1 != null">
        #{add1,jdbcType=VARCHAR},
      </if>
      <if test="add2 != null">
        #{add2,jdbcType=VARCHAR},
      </if>
      <if test="add3 != null">
        #{add3,jdbcType=VARCHAR},
      </if>
      <if test="add4 != null">
        #{add4,jdbcType=VARCHAR},
      </if>
      <if test="add5 != null">
        #{add5,jdbcType=INTEGER},
      </if>
      <if test="add6 != null">
        #{add6,jdbcType=INTEGER},
      </if>
      <if test="add7 != null">
        #{add7,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qkm.wiki.domain.ZlExample" resultType="java.lang.Long">
    select count(*) from zl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update zl
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.category1 != null">
        category1 = #{record.category1,jdbcType=BIGINT},
      </if>
      <if test="record.category2 != null">
        category2 = #{record.category2,jdbcType=BIGINT},
      </if>
      <if test="record.category3 != null">
        category3 = #{record.category3,jdbcType=BIGINT},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.cover != null">
        cover = #{record.cover,jdbcType=VARCHAR},
      </if>
      <if test="record.viewcount != null">
        viewcount = #{record.viewcount,jdbcType=INTEGER},
      </if>
      <if test="record.votecount != null">
        votecount = #{record.votecount,jdbcType=INTEGER},
      </if>
      <if test="record.dates != null">
        dates = #{record.dates,jdbcType=TIMESTAMP},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.add1 != null">
        add1 = #{record.add1,jdbcType=VARCHAR},
      </if>
      <if test="record.add2 != null">
        add2 = #{record.add2,jdbcType=VARCHAR},
      </if>
      <if test="record.add3 != null">
        add3 = #{record.add3,jdbcType=VARCHAR},
      </if>
      <if test="record.add4 != null">
        add4 = #{record.add4,jdbcType=VARCHAR},
      </if>
      <if test="record.add5 != null">
        add5 = #{record.add5,jdbcType=INTEGER},
      </if>
      <if test="record.add6 != null">
        add6 = #{record.add6,jdbcType=INTEGER},
      </if>
      <if test="record.add7 != null">
        add7 = #{record.add7,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update zl
    set id = #{record.id,jdbcType=BIGINT},
      `name` = #{record.name,jdbcType=VARCHAR},
      category1 = #{record.category1,jdbcType=BIGINT},
      category2 = #{record.category2,jdbcType=BIGINT},
      category3 = #{record.category3,jdbcType=BIGINT},
      description = #{record.description,jdbcType=VARCHAR},
      cover = #{record.cover,jdbcType=VARCHAR},
      viewcount = #{record.viewcount,jdbcType=INTEGER},
      votecount = #{record.votecount,jdbcType=INTEGER},
      dates = #{record.dates,jdbcType=TIMESTAMP},
      author = #{record.author,jdbcType=VARCHAR},
      add1 = #{record.add1,jdbcType=VARCHAR},
      add2 = #{record.add2,jdbcType=VARCHAR},
      add3 = #{record.add3,jdbcType=VARCHAR},
      add4 = #{record.add4,jdbcType=VARCHAR},
      add5 = #{record.add5,jdbcType=INTEGER},
      add6 = #{record.add6,jdbcType=INTEGER},
      add7 = #{record.add7,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qkm.wiki.domain.Zl">
    update zl
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="category1 != null">
        category1 = #{category1,jdbcType=BIGINT},
      </if>
      <if test="category2 != null">
        category2 = #{category2,jdbcType=BIGINT},
      </if>
      <if test="category3 != null">
        category3 = #{category3,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="cover != null">
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="viewcount != null">
        viewcount = #{viewcount,jdbcType=INTEGER},
      </if>
      <if test="votecount != null">
        votecount = #{votecount,jdbcType=INTEGER},
      </if>
      <if test="dates != null">
        dates = #{dates,jdbcType=TIMESTAMP},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="add1 != null">
        add1 = #{add1,jdbcType=VARCHAR},
      </if>
      <if test="add2 != null">
        add2 = #{add2,jdbcType=VARCHAR},
      </if>
      <if test="add3 != null">
        add3 = #{add3,jdbcType=VARCHAR},
      </if>
      <if test="add4 != null">
        add4 = #{add4,jdbcType=VARCHAR},
      </if>
      <if test="add5 != null">
        add5 = #{add5,jdbcType=INTEGER},
      </if>
      <if test="add6 != null">
        add6 = #{add6,jdbcType=INTEGER},
      </if>
      <if test="add7 != null">
        add7 = #{add7,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qkm.wiki.domain.Zl">
    update zl
    set `name` = #{name,jdbcType=VARCHAR},
      category1 = #{category1,jdbcType=BIGINT},
      category2 = #{category2,jdbcType=BIGINT},
      category3 = #{category3,jdbcType=BIGINT},
      description = #{description,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      viewcount = #{viewcount,jdbcType=INTEGER},
      votecount = #{votecount,jdbcType=INTEGER},
      dates = #{dates,jdbcType=TIMESTAMP},
      author = #{author,jdbcType=VARCHAR},
      add1 = #{add1,jdbcType=VARCHAR},
      add2 = #{add2,jdbcType=VARCHAR},
      add3 = #{add3,jdbcType=VARCHAR},
      add4 = #{add4,jdbcType=VARCHAR},
      add5 = #{add5,jdbcType=INTEGER},
      add6 = #{add6,jdbcType=INTEGER},
      add7 = #{add7,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="findcat"  resultType="com.qkm.wiki.resp.ZlQueryResp">
   select * from zl where add3 = #{cat,jdbcType=VARCHAR}
  </select>

  <select id="findcat1"  resultType="com.qkm.wiki.resp.ZlQueryResp">
   select * from zl where add1 = #{cat,jdbcType=VARCHAR}
  </select>

  <select id="findcat2"  resultType="com.qkm.wiki.resp.ZlQueryResp">
   select * from zl where add2 = #{cat,jdbcType=VARCHAR}
  </select>

  <select id="findid"  resultType="com.qkm.wiki.resp.ZlQueryResp">
   select `id`,`name`,`author`,`dates`,`add1`,`add2`,`add3` ,`description` from zl where id = #{id,jdbcType=BIGINT}
  </select>


  <select id="findpersonal"  resultType="com.qkm.wiki.resp.ZlQueryResp">
   select * from zl where author = #{namer,jdbcType=VARCHAR}
  </select>

  <select id="findname"  resultType="com.qkm.wiki.resp.ZlQueryResp">
   select * from zl where name = #{name,jdbcType=VARCHAR}
  </select>
</mapper>